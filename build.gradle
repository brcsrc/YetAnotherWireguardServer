
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.brcsrc'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

task checkJarExists {
	doLast {
		def jarFile = file('build/libs/yaws-0.0.1-SNAPSHOT.jar')
		if (!jarFile.exists()) {
			configurations.runtimeClasspath.resolve()
		}
	}
}

test.dependsOn checkJarExists

// create local dir 'lib' and run ./gradlew copyDependenciesToLocalRepo
task copyDependenciesToLocalRepo(type: Copy) {
	from configurations.runtimeClasspath
	into 'lib'
}

repositories {
	flatDir {
		dirs 'lib'
	}
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.xerial:sqlite-jdbc:3.36.0.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}



tasks.named('test') {
	useJUnitPlatform()
	// make test run verbose
	testLogging {
		events("passed", "skipped", "failed", "standard_out", "standard_error")
	}
}
