#!/usr/bin/env bash
set -exuo pipefail

# network
nework_cidr="10.200.0.0/24"

# server
network_cidr="10.200.0.1/24"
network_endpoint="127.0.0.1"
network_listen_port="51820"
network_public_key_name="server-public-key-001"
network_private_key_name="server-private-key-001"
network_config_name="wg99"

# client
client_config_name="test-client"
client_cidr="10.200.0.2/32"
client_dns="1.1.1.1"
client_allowed_ips="0.0.0.0/0"
client_public_key_name="client-public-key-001"
client_private_key_name="client-private-key-001"

# create keys
./create-key-pair \
  --private-key-name "$network_private_key_name" \
  --public-key-name "$network_public_key_name"


# create server config
./create-network-config \
  --config-name "$network_config_name" \
  --network-cidr "$network_cidr" \
  --network-listen-port "$network_listen_port" \
  --network-private-key-name "$network_private_key_name"

# test iptables is able to be manipulated
./configure-iptables \
  --operation add-network \
  --network-cidr "$nework_cidr"
# check rules created
iptables -C INPUT -s "$network_cidr" -j ACCEPT
iptables -C OUTPUT -d "$network_cidr" -j ACCEPT

# remove network
./configure-iptables \
  --operation remove-network \
  --network-cidr "$nework_cidr"

# check rules are absent
set +e
iptables -C INPUT -s "$network_cidr" -j ACCEPT
[ $? -ne 0 ] || exit 1
iptables -C OUTPUT -d "$network_cidr" -j ACCEPT
[ $? -ne 0 ] || exit 1
set -e

# add back for remainder of test
./configure-iptables \
  --operation add-network \
  --network-cidr "$nework_cidr"

# bring up wg interface, depends on create-network-config
wg-quick up "$network_config_name"

# create client
./create-key-pair \
  --private-key-name "$client_private_key_name" \
  --public-key-name "$client_public_key_name"

# test clients can be added and removed
./add-peer-to-network \
  --config-name "$network_config_name" \
  --client-cidr "$client_cidr" \
  --client-public-key-name "$client_public_key_name"

client_added=$(cat "/etc/wireguard/${network_config_name}.conf" | grep "$client_cidr")
[ -z "$client_added" ] && exit 1

./remove-peer-from-network \
  --config-name "$network_config_name" \
  --client-cidr "$client_cidr" \
  --client-public-key-name "$client_public_key_name"

# should not get match for removed client in config
set +e
cat "/etc/wireguard/${network_config_name}.conf" | grep -wq "$client_cidr"
[ $? -eq 0 ] && exit 1
set -e

# add back to continue
./add-peer-to-network \
  --config-name "$network_config_name" \
  --client-cidr "$client_cidr" \
  --client-public-key-name "$client_public_key_name"

./create-client-config \
  --config-name "$client_config_name" \
  --client-private-key-name "$client_private_key_name" \
  --client-cidr "$client_cidr" \
  --client-dns "$client_dns" \
  --network-public-key-name "$network_public_key_name" \
  --network-endpoint "$network_endpoint" \
  --network-listen-port "$network_listen_port" \
  --allowed-ips "$client_allowed_ips"

last_level="$?"
echo "completed successfully"
exit $last_level


