/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Network } from './Network';
import {
    NetworkFromJSON,
    NetworkFromJSONTyped,
    NetworkToJSON,
    NetworkToJSONTyped,
} from './Network';
import type { Client } from './Client';
import {
    ClientFromJSON,
    ClientFromJSONTyped,
    ClientToJSON,
    ClientToJSONTyped,
} from './Client';

/**
 * 
 * @export
 * @interface NetworkClient
 */
export interface NetworkClient {
    /**
     * 
     * @type {number}
     * @memberof NetworkClient
     */
    networkClientId?: number;
    /**
     * 
     * @type {Network}
     * @memberof NetworkClient
     */
    network?: Network;
    /**
     * 
     * @type {Client}
     * @memberof NetworkClient
     */
    client?: Client;
}

/**
 * Check if a given object implements the NetworkClient interface.
 */
export function instanceOfNetworkClient(value: object): value is NetworkClient {
    return true;
}

export function NetworkClientFromJSON(json: any): NetworkClient {
    return NetworkClientFromJSONTyped(json, false);
}

export function NetworkClientFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkClient {
    if (json == null) {
        return json;
    }
    return {
        
        'networkClientId': json['networkClientId'] == null ? undefined : json['networkClientId'],
        'network': json['network'] == null ? undefined : NetworkFromJSON(json['network']),
        'client': json['client'] == null ? undefined : ClientFromJSON(json['client']),
    };
}

export function NetworkClientToJSON(json: any): NetworkClient {
    return NetworkClientToJSONTyped(json, false);
}

export function NetworkClientToJSONTyped(value?: NetworkClient | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'networkClientId': value['networkClientId'],
        'network': NetworkToJSON(value['network']),
        'client': ClientToJSON(value['client']),
    };
}

